* README
** Project setting
*** Create a project
#+begin_src shell
  mkdir {project-name}
  cd {project-name}
#+end_src
*** Install essential tools
Install sbcl with =quicklisp=
#+begin_src shell
  curl -O https://beta.quicklisp.org/quicklisp.lisp
  sbcl --load quicklisp.lisp --eval '(quicklisp-quickstart:install)' --eval '(ql:add-to-init-file)' --eval '(quit)'
#+end_src
Initialize Project
#+begin_src shell
  mkdir -p src
  touch src/main.lisp
#+end_src
Install =hunchentoot= package
#+begin_src shell
  sbcl
  (ql:quickload "hunchentoot")
#+end_src
** Write code to =main.lisp= file
#+begin_src sbcl
  ;; Load Quicklisp
  (load "~/quicklisp/setup.lisp")
  
  ;; Load Hunchentoot server
  (ql:quickload "hunchentoot")
  
  ;; Define packages
  (defpackage :my-web-server
    (:use :cl :hunchentoot))
  (in-package :my-web-server)
  
  ;; Define simple handler
  (define-easy-handler (hello :uri "/") ()
    (setf (hunchentoot:content-type*) "text/plain")
    "Hello, World!")
  
  ;; Run web server
  (defvar *my-server* (hunchentoot:start (make-instance 'hunchentoot:easy-acceptor :address "0.0.0.0" :port 4000)))
  
  (format t "Server started on http://0.0.0.0:4000~%")
  
  (loop (sleep 60))
#+end_src
** Run project
#+begin_src shell
  sbcl --load src/main.lisp
#+end_src
** Check the functionalities
If you go to [[http://localhost:4000]], You can csee =Hello, World!=
** Build Docker
*** How to build Docker image
#+begin_src shell
  docker build . --tag mingyuchoo/sbcl/hunchentoot-web-app:latest
#+end_src
*** How to run Docker Container
#+begin_src shell
  docker run -p 4000:4000 mingyuchoo/sbcl/hunchentoot-web-app:latest
  # or
  docker run -d -p 4000:4000 mingyuchoo/sbcl/hunchentoot-web-app:latest
#+end_src
*** How to debug Docker Image
#+begin_src shell
  docker image ls --all
  docker run -it --entrypoint /bin/bash <LAST_IMAGE_ID>
#+end_src
** References
- https://www.quicklisp.org/beta/
